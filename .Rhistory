"PreGAC","Clearwell"))
summary_plot <- ggplot(data = df %>%
filter(year == year_select) %>%
distinct(),
aes(x = week_num, y = TTHMs,
col = station, shape = station)) +
geom_line() +
geom_point(size = 2, col = "white") +
geom_point(size = 1) +
labs(title = "total trihalomethanes (tTHMs)",
x = "week",
y = expression(Concentration~(mu*g~L^-1))) +
theme_bpwtp() +
scale_color_viridis_d(begin = 0.2, end = 0.8, option = "D")
summary_plot$data$station <- factor(summary_plot$data$station,
levels = c("PreFM","Channel",
"PreGAC","Clearwell"))
full_plot = plot_grid(trend_plot, summary_plot, ncol = 1, axis = "l",
align = "hv", rel_heights = c(1,0.5), labels = "auto")
return(full_plot)
}
trend_plot <- trend_fig(df = df, year_select = year_select,
var = unique(df$parm_unit))
#' BPWTP theme
#'
#' @param base_size font size
#' @param base_family font family
#'
#' @return theme
#'
#' @import ggplot2
theme_bpwtp <-  function(base_size = 8,
base_family = "") {
ggplot2::"%+replace%"(
ggplot2::theme_bw(base_size = base_size, base_family = base_family) ,
ggplot2::theme(
axis.ticks.length = grid::unit(0, "cm"),
axis.line = ggplot2::element_line(colour = "black", size = rel(1)),
panel.grid.major = ggplot2::element_line(color = "grey95"),
panel.grid.minor = ggplot2::element_line(color = "grey95"),
panel.border = ggplot2::element_rect(fill = NA, color = "black"),
plot.caption = ggplot2::element_text(
size = rel(0.8),
hjust = 1,
face = "italic"
),
strip.background = ggplot2::element_rect(fill = "gray95", color = "black")
)
)
}
trend_plot <- trend_fig(df = df, year_select = year_select,
var = unique(df$parm_unit))
?stat_summary
?geom_point
#' @param df data frame
#' @param year_select year of interest
#' @param var variable of interest
#'
#' @return ggplot
#' @export
#'
#' @importFrom ggplot2 ggplot stat_summary geom_line geom_point facet_grid
#'   scale_y_continuous labs theme scale_color_viridis_d
#' @importFrom dplyr filter
trend_fig <- function(df = "", year_select = "", var = "") {
p <- ggplot(data = filter(df, year == year_select, !is.na(station)),
aes(x = week_num, y = result, col = station)) +
geom_point(data = df, aes(x = week_num, y = result), col = "grey", alpha = 0.4) +
stat_summary(data = df, geom = "line", fun = "mean", col = "grey", linewidth = 1) +
geom_line() +
geom_point(size = 2, col = "white") +
geom_point(size = 1) +
facet_grid(station~., scales = "free_y")+
scale_y_continuous(labels = scales::comma) +
labs(title = var, subtitle = paste(year_select, "trend with historical data"),
x = "week", y = "result") +
theme_bpwtp() +
theme(legend.position = "bottom")  +
scale_color_viridis_d(begin = 0.2, end = 0.8, option = "D")
return(p)
}
trend_plot <- trend_fig(df = df, year_select = year_select,
var = unique(df$parm_unit))
trend_plot <- trend_fig(df = df, year_select = year_select,
var = unique(df$parm_unit))
trend_plot <- trend_plot +
facet_grid(parm_unit ~ station, scales = "free_y") +
geom_hline(aes(yintercept = hist.max), col = "red", linetype = "dashed") +
geom_hline(aes(yintercept = hist.min), col = "red", linetype = "dashed") +
labs(title = "Individual trihalomethanes",
y = expression(Concentration~(mu*g/L)))
trend_plot$data$station <- factor(trend_plot$data$station)
trend_plot
summary_plot <- ggplot(data = df %>%
filter(year == year_select) %>%
distinct(),
aes(x = week_num, y = TTHMs,
col = station, shape = station)) +
geom_line() +
geom_point(size = 2, col = "white") +
geom_point(size = 1) +
labs(title = "total trihalomethanes (tTHMs)",
x = "week",
y = expression(Concentration~(mu*g~L^-1))) +
theme_bpwtp() +
scale_color_viridis_d(begin = 0.2, end = 0.8, option = "D")
summary_plot$data$station <- factor(summary_plot$data$station)
full_plot = plot_grid(trend_plot, summary_plot, ncol = 1, axis = "l",
align = "hv", rel_heights = c(1,0.5), labels = "auto")
full_plot
?render
render("R/monthly_report.Rmd", params = list(labdat = labdat))
library(rmarkdown)
render("R/monthly_report.Rmd", params = list(labdat = labdat))
knit_with_parameters("~/GitHub/bpwtpR/inst/rmd/reportgeneration.Rmd")
knit_with_parameters("~/GitHub/bpwtpR/inst/rmd/reportgeneration.Rmd")
render("R/monthly_report.Rmd", params = list(labdat = labdat))
document()
library(devtools)
document()
rm(list = ls())
document()
check()
?render
?rowwise
?matches
?n
?rowwise
?strsplit
?is.na
?as.character
document()
check()
use_package("rmarkdown")
document()
check()
document()
check()
library(devtools)
document()
check()
install()
remove.packages(rlang)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
document()
library(devtools)
document()
check()
install()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.pos = 'H', out.extra = "")
#code <- sapply(list.files(file.path(".", "code"), full.names = TRUE), source)
library(bpwtpR)
library(pander)
library(tidyverse)
library(lubridate)
library(cowplot)
#library(readxl)
library(bpwtpR)
current_year = 2019
month_select = "Jun"
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(path_to_db_file)
install.packages("xfun")
library(devtools)
check()
install()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test")
document()
install()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
?create_database
??create_database
library(devtools)
load_all()
load_all(".")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
debug(create_database)
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
undebug(create_database)
debug(prepare_labdat)
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
colnames(labdat_parameters)
!identical(colnames(labdat_parameters), labdat_parameters_cols)
load_all()
debug(update_parameters)
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
View(d)
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/labdat_datafiles_some",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
?first
?second
?first
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
?stop
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
document()
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
debug(handle_database)
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
debug(scrape_ion_values)
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
is_empty(silica_included_start_rw)
is_empty(silica_included_start_cw)
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
load_all()
d <- create_database("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/test_db.csv",
"C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data/parameters.xlsx")
View(d)
dd <- d[[1]]
View(d)
View(dd)
c <- check(missing_params, "../../uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/1984_routine_labdat.xlsx")
c <- check_missing_params("../../uSask_2022/Buffalo Pound/data_bad/labdat_datafiles_some/1984_routine_labdat.xlsx",
"../../uSask_2022/Buffalo Pound/data/parameters.xlsx")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.pos = 'H', out.extra = "")
#code <- sapply(list.files(file.path(".", "code"), full.names = TRUE), source)
library(bpwtpR)
library(pander)
library(tidyverse)
library(lubridate)
library(cowplot)
#library(readxl)
library(bpwtpR)
current_year = 2019
month_select = "Jun"
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(path_to_db_file)
path_to_db_file <-  "C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_old2/clean_data/BPWTP_labdat_DB.csv"
current_year = 2019
month_select = "Jun"
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(path_to_db_file)
# To simplify column names while the data frame is being used. Blair wanted
# columns to start with _tbl
colnames(labdat) <- str_remove(colnames(labdat), "tbl_")
render("inst/rmd/reportgeneration.Rmd")
?render
?params
?rmarkdown::params
library(rmarkdown)
?rmarkdown::params
?rmarkdown::html_document
render("inst/rmd/reportgeneration.Rmd")
library(xfun)
render("inst/rmd/reportgeneration.Rmd")
remove.packages("xfun")
install.packages("xfun")
install.packages("xfun")
load_all()
library(devtools)
load_all()
render("inst/rmd/reportgeneration.Rmd")
render("inst/rmd/reportgeneration.Rmd")
render("inst/rmd/reportgeneration.Rmd")
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Raw",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
debug(group_table_historical)
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
debug(decimal_places)
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
df_round <- df %>%
rowwise()
for (i in 1:nrow(df) {
for (i in 1:nrow(df) { sprintf("%d", i) decimal_places(df$result[i]) })
for (i in 1:nrow(df) {
for (i in 1:nrow(df)) { sprintf("%d", i) decimal_places(df$result[i]) }
nrow(df)
for (i in 1:nrow(df)) {
sprintf("%d", i)
decimal_places(df$result[i])
}
undebug(decimal_place)
undebug(decimal_places)
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
for (i in 1:nrow(df)) {
sprintf("%d", i)
decimal_places(df$result[i])
}
df = labdat
year_select = current_year
grouping = "traceConstituents"
sampling_station = "Clearwell",
sampling_station = "Clearwell"
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9)
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F
df <- df %>%
filter(parm_tag == grouping & station == sampling_station) %>%
mutate(result = case_when(result == -999999 ~ NA,
TRUE ~ result))
for (i in 1:nrow(df)) {
sprintf("%d", i)
decimal_places(df$result[i])
}
df[20487,]
df[20487,]$result
formatC(df[20487,]$result, format = "d")
result = 0.005
result / 10
View(df)
0.00050
?formatC
print(0.00050)
print(format(0.00050), scientific = F)
print(format(0.00050, scientific = F))
?options
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
?opts_chunk
load_all
load_all()
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
df[20487,]$result
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(params$path_to_db_file)
# To simplify column names while the data frame is being used. Blair wanted
# columns to start with _tbl
colnames(labdat) <- str_remove(colnames(labdat), "tbl_")
group_table_historical(df = labdat,
year_select = current_year,
grouping = "traceConstituents",
sampling_station = "Clearwell",
percentiles = c(0.1, 0.25, 0.5, 0.75, 0.9),
by_month = F,
month_select = month_select)
document()
install())
install()
render("inst/rmd/reportgeneration.Rmd")
library(devtools)
library(rmarkdown)
render("inst/rmd/reportgeneration.Rmd")
library(devtools)
install()
load_all()
render("inst/rmd/reportgeneration.Rmd")
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(params$path_to_db_file)
# To simplify column names while the data frame is being used. Blair wanted
# columns to start with _tbl
colnames(labdat) <- str_remove(colnames(labdat), "tbl_")
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(params$path_to_db_file)
# To simplify column names while the data frame is being used. Blair wanted
# columns to start with _tbl
colnames(labdat) <- str_remove(colnames(labdat), "tbl_")
## The complete labdat database file (labdat_file) from 1980 to 2019 will never be changed
## it will only be updated with the most contemporary data and saved as a new file
labdat <- read_db(params$path_to_db_file)
# To simplify column names while the data frame is being used. Blair wanted
# columns to start with _tbl
colnames(labdat) <- str_remove(colnames(labdat), "tbl_")
d <- read.csv("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_old2/clean_data/BPWTP_labdat_DB.csv")
d <- read_db("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_old2/clean_data/BPWTP_labdat_DB.csv")
debug(read_db)
d <- read_db("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_old2/clean_data/BPWTP_labdat_DB.csv")
labdat <- fpath %>%
read.csv(fileEncoding = "ISO-8859-1")
View(labdat)
#' Read the csv containing the database
#'
#' Read the csv containing all of the processed labdat data, if it exists. If it
#' does not exist, it will later be created
#'
#' @param path_to_db_file character string. Path to the file that contains the
#'  database file, or if the file does not yet exist, the desired path to the
#'  file that will contain the database file
#'
#' @return dataframe containing the database, if it exists, or NULL if it does not
read_db <- function(path_to_db_file) {
fpath <- file.path(path_to_db_file)
# The DB does not yet exist
if (file.exists(fpath) == FALSE) {
labdat <- NULL
print("Existing database was not input. Database will be newly created.")
} else {
labdat <- fpath %>%
read.csv(fileEncoding = "ISO-8859-1") %>%
mutate(tbl_date_ymd = as.Date(tbl_date_ymd,
tryFormats = c("%Y-%m-%d", "%Y/%m/%d",
"%m/%d/%Y")))
}
return(labdat)
}
d <- read_db("C:/Users/PC/Documents/uSask_2022/Buffalo Pound/data_old2/clean_data/BPWTP_labdat_DB.csv")
library(devtools)
load_all()
dd <- read_db("../../uSask_2022/Buffalo Pound/data/labdat_datafiles/1980_routine_labdat.xlsx")
dd <- read_db("../../uSask_2022/Buffalo Pound/data_old2/clean_data/BPWTP_labdat_DB.csv")
View(dd)
render("inst/rmd/reportgeneration.Rmd")
render("inst/rmd/reportgeneration.Rmd", output_dir = "../../uSask_2022/Buffalo Pound/delme_rmd_Test")
render("inst/rmd/reportgeneration.Rmd", output_dir = "../../uSask_2022/Buffalo Pound/delme_rmd_Test")
render("inst/rmd/reportgeneration.Rmd", output_dir = "../../uSask_2022/Buffalo Pound/delme_rmd_Test")
